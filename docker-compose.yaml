name: finalpos
services:
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: final_pos
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      target: runner
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASS: postgres
      DB_NAME: final_pos
    ports:
      - '3000:3000'

  test:
    build:
      context: .
      target: tester
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASS: postgres
      DB_NAME: final_pos
    volumes:
      - .:/app
      - /app/node_modules
    command: >
      /bin/sh -c "
      echo 'Waiting for postgres...' &&
      until nc -z postgres 5432; do
        sleep 1;
      done &&
      echo 'PostgreSQL is ready!' &&
      npx jest --config ./test/jest-e2e.json --runInBand --detectOpenHandles --testNamePattern='Products Optimistic Lock'
      "
    profiles:
      - test
